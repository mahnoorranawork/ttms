{"ast":null,"code":"var _jsxFileName = \"/Users/mahnoor/webapp/src/components/eKYC/DocumentScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentScanner = () => {\n  _s();\n  const [scannedImage, setScannedImage] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleScan = async () => {\n    try {\n      // Implement code to capture or upload a document image.\n      // This may involve using a third-party library like react-dropzone for file upload or react-cropper for cropping.\n      // After capturing or uploading, set the scanned image in the state (setScannedImage).\n    } catch (error) {\n      console.error('Scanning error: ', error);\n    }\n  };\n  const handleSave = () => {\n    if (scannedImage) {\n      // Implement code to save the scanned image to your server or cloud storage.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: scannedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: scannedImage,\n        alt: \"Scanned Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScan,\n        children: \"Scan/Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentScanner, \"IGZ6u0uIP/wFI1+AIz9fiDLCHm4=\");\n_c = DocumentScanner;\nexport default DocumentScanner;\nvar _c;\n$RefreshReg$(_c, \"DocumentScanner\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","DocumentScanner","_s","scannedImage","setScannedImage","fileInputRef","handleScan","error","console","handleSave","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/mahnoor/webapp/src/components/eKYC/DocumentScanner.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst DocumentScanner = () => {\n  const [scannedImage, setScannedImage] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const handleScan = async () => {\n    try {\n      // Implement code to capture or upload a document image.\n      // This may involve using a third-party library like react-dropzone for file upload or react-cropper for cropping.\n      // After capturing or uploading, set the scanned image in the state (setScannedImage).\n    } catch (error) {\n      console.error('Scanning error: ', error);\n    }\n  };\n\n  const handleSave = () => {\n    if (scannedImage) {\n      // Implement code to save the scanned image to your server or cloud storage.\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {/* Display the scanned image */}\n        {scannedImage && <img src={scannedImage} alt=\"Scanned Document\" />}\n      </div>\n      <div>\n        {/* Input for capturing or uploading a document */}\n        <input type=\"file\" accept=\"image/*\" ref={fileInputRef} />\n        <button onClick={handleScan}>Scan/Upload Document</button>\n        <button onClick={handleSave}>Save Document</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMQ,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA;MACA;IAAA,CACD,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIN,YAAY,EAAE;MAChB;IAAA;EAEJ,CAAC;EAED,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAEGP,YAAY,iBAAIH,OAAA;QAAKW,GAAG,EAAER,YAAa;QAACS,GAAG,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACNhB,OAAA;MAAAU,QAAA,gBAEEV,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,GAAG,EAAEd;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDhB,OAAA;QAAQoB,OAAO,EAAEd,UAAW;QAAAI,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DhB,OAAA;QAAQoB,OAAO,EAAEX,UAAW;QAAAC,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAlCID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}